/*!
 * Copyright(c) 2015 Craig Haworth
 *
 * Implement function import mechanism
 */

var parser = require("odata-parser");
var queryTransform = require("./queryTransform.js");
var url = require("url");
var querystring = require("querystring");

var processBody = function(body, cfg, req, res) {
	var col = cfg.model.entitySets[req.params.collection];
	
	if(col === undefined) {
		var error = new Error("Collection not Found");
        error.code = 404;
        res.odataError(error);
        return;
	}
	
	if (req.params.id) {
        req.params.id = req.params.id.replace(/\"/g, "").replace(/'/g, "");
	}
	
	var func = col.functions[req.params.function];
	
	if(func === undefined) {
		var error = new Error("Function import not Found");
        error.code = 404;
        res.odataError(error);
        return;
	}
	
	if(body === undefined) {
		var _url = url.parse(req.url, true);
	
		// add query params to request
		req.query = _url.query;
	
		func(cfg, req, res);
	} else {
		// parse body
		req.query = body;	
		
		func(cfg, req, res);
	}
}

module.exports = function(cfg, req, res) {

	if(req.method == "POST") {
	    if (req.body) {
			return processBody(req.body, cfg, req, res);
		}

		var body = '';
		req.on('data', function (data) {
			body += data;
			if (body.length > 1e6)
				req.connection.destroy();
		});
		req.on('end', function () {
			body = body.replace("data=","");
			body = decodeURIComponent(unescape(body));
			return processBody(JSON.parse(body), cfg, req, res);
		});
	} else {
		return processBody(undefined, cfg, req, res);
	}
	
	// TODO get collection definition
	
	
	
}

